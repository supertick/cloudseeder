app:

# todo one to many methods
# one to many roles

  models:
    config:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      port: int
      work_dir: str
      log_level: str
      deepgram_api_key: str
      database_type: Literal["tinydb", "dynamodb"] = Field("tinydb", description="Database type", example="dynamodb")
      queue_type: Literal["local", "noop"] = Field("tinydb", description="Queue type", example="local")
      aws_access_key_id: Optional[str] = Field(None, description="AWS Access Key ID", example="your-access-key")
      aws_secret_access_key: Optional[str] = Field(None, description="AWS Secret Access Key", example="your-secret-key")
      aws_region: Optional[str] = Field(None, description="AWS Region", example="us-east-1")

    company:
      id: Optional[str] = Field(None)
      name: str
      description: str
      users: list[str]

    user:
      _method_map:
        "post /v1/user": ["admin"]
        "get /v1/users": []
        "get /v1/user/{id}": []
        "put /v1/user/{id}": ["admin"]
        "delete /v1/user/{id}": ["admin"]
      id: Optional[str] = Field(None, example="admin@scribble.ai")
      full_name: Optional[str] = Field(None, example="John Doe")
      password_hash: Optional[str] = Field(None, example="secret")
      email: str
      roles: list[str]

    transcription_request:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      type: str = Field(None, example="string")
      files: list[str]

    transcription:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      type: str
      status: str
      files_path: str

    transcription_result:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      type: str
      status: str
      files: list[str]

#       modified: Optional[int] = Field(None, example=1683123456789)
