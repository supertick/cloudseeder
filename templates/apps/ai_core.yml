app:

# todo one to many methods
# one to many roles

  models:
    config:
      id: Optional[str] = Field("default", example="default")
      port: Optional[int] = Field(8001, example="8001")
      # FIXME - rename this to output
      work_dir: Optional[str] = Field("work", example="work")
      log_level: Literal["DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"] = Field("INFO", description="Log Level", example="INFO") 

      # REQUIRED CONFIGURATION
      auth_enabled: Optional[bool] = Field(False, description="Enable authentication", example=True)
      database_type: Literal["s3", "none", "tinydb", "dynamodb", "filesystem"] = Field("s3", description="Database type", example="dynamodb")
      bucket_name: Optional[str] = Field("scribble2-data", description="S3 bucket name", example="scribble2-data")

      debug: Optional[bool] = Field(True, description="Enable debug mode", example=True)
      # need blocking or async queues
      queue_type: Literal["local", "sqs"] = Field("local", description="Queue type", example="local")      
      deepgram_api_key: Optional[str] = Field(None, example="xxxxxxxxxxxxxxxxxxxxxxxxxxxx")

      openai_key: Optional[str] = Field(None, description="OpenAI access key", example="your-access-key")
      openai_model: Optional[str] = Field("gpt-4o-mini", description="OpenAI model", example="gpt-4o-mini")

      aws_access_key_id: Optional[str] = Field(None, description="AWS Access Key ID", example="your-access-key")
      aws_secret_access_key: Optional[str] = Field(None, description="AWS Secret Access Key", example="your-secret-key")
      aws_region: Optional[str] = Field(None, description="AWS Region", example="us-east-1")

      slack_enabled: Optional[bool] = Field(False, description="Enable Slack notifications", example=True)
      slack_channel: Optional[str] = Field("acutedge-alerts", description="Slack channel", example="acutedge-alerts")
      slack_bot_token: Optional[str] = Field(None, description="Slack bot token", example="xxxxxxxx")

    user:
      id: Optional[str] = Field(None, example="john@company1.com")
      fullname: Optional[str] = Field(None, example="John Doe")
      email: Optional[str] = Field(None, example="john@company1.com")
      password_hash: Optional[str] = Field(None, example="secret")
      roles: Optional[list[str]] = Field(None, example=["admin"])
      last_login: Optional[int] = Field(None, example=1683123456789)
      modified: Optional[int] = Field(None, example=1683123456789)

    transcription_request:
      id: Optional[str] = Field(None, description="Transcription Request ID - can be created by client or will be self generated", example="123e4567-e89b-12d3-a456-426614174000")
      user_id: str = Field(None, description="clinician/user id", example="john@companya.com")
      patient_id: Optional[str] = Field(None, description="patient id - uuid ?", example="patient_id-123456789")
      assessment_id: Optional[str] = Field(None, description="assessment id - uuid ?", example="assessment_id-123456789")
      company_id: Optional[str] = Field(None, description="assessment id - uuid - should it be part of key ?", example="CompanyA")
      transcribe_type: Literal["deepgram", "aws-transcribe", "whisper"] = Field("deepgram", description="transcription type", example="deepgram")
      audio_files: list[str] = Field(None, example=["Kate-SOC-Visit-Audio-49min26sec.webm"])
      question_files: list[str] = Field(None, ddescription="questions for this assesment", example=["questions.json"])
