app:
  models:

    config:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      # REQUIRED CONFIGURATION
      auth_enabled: Optional[bool] = Field(False, description="Enable authentication", example=True)
      database_type: Literal["tinydb", "dynamodb"] = Field("tinydb", description="Database type", example="dynamodb")
      debug: Optional[bool] = Field(True, description="Enable debug mode", example=True)
      # need blocking or async queues
      queue_type: Literal["local", "sqs"] = Field("local", description="Database type", example="local")      

      # COMMON CONFIGURATION
      port: int
      log_level: str

      work_dir: str
      aws_access_key_id: Optional[str] = Field(None, description="AWS Access Key ID", example="your-access-key")
      aws_secret_access_key: Optional[str] = Field(None, description="AWS Secret Access Key", example="your-secret-key")
      aws_region: Optional[str] = Field(None, description="AWS Region", example="us-east-1")

      version: Optional[str] = Field("0.0.0", example="0.1.0")

    user:
      id: Optional[str] = Field(None, example="john@company1.com")
      fullname: Optional[str] = Field(None, example="John Doe")
      email: Optional[str] = Field(None, example="john@company1.com")
      password_hash: Optional[str] = Field(None, example="secret")
      roles: Optional[list[str]] = Field(None, example=["admin"])
      last_login: Optional[int] = Field(None, example=1683123456789)
      modified: Optional[int] = Field(None, example=1683123456789)

    # role:
    #   id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
    #   name: str
    #   description: str
    #   products: list[str]
    #   modified: Optional[int] = Field(None, example=1683123456789)

    user_product_access:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      user_id: Optional[str] = Field(None, example="john@company1.com")
      product_id: Optional[str] = Field(None, example="CloneSelectMFA")
      access: Optional[bool] = Field(False, example=False)
      enabled: Optional[bool] = Field(False, example=False)

    product:
      id: Optional[str] = Field(None, example="BMSMFALite")
      title: Optional[str] = Field(None, example="BMS MFALite")
      description: Optional[str] = Field(None, example="BMS MFALite")

    run:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      product: str
      start_datetime: str
      status: str
      input_dir: str
      output_dir: str
      modified: Optional[int] = Field(None, example=1683123456789)

    report:
      id: Optional[str] = Field(None, example="123e4567-e89b-12d3-a456-426614174000")
      product: str
      title: str
      # FIXME - snake case
      start_datetime: int
      end_datetime: Optional[int] = Field(None, example=1683123456789)
      status: str
      exception: Optional[str] = Field(None, example="error")
      input_files: list[str]
      output_files: list[str]
      modified: Optional[int] = Field(None, example=1683123456789)
